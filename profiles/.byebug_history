c
json_response['errors']['email']
json_response
json_response['email']
c
expect(json_response['name']).to eq(user.name)
expect(json_response['email']).to eq(user.email)
user.email
json_response['email']
json_response
c
@current_user = User.find(request.env['current_user_id'])
c
User.find(request.env['current_user_id'])
c
current_user.profile
c
current_user.profile
c
C
User.find(request.env['current_user_id'])
request.env['current_user_id']
Request.current_user_id
env['current_user_id']
c
User.last
User.find(env['current_user_id'])
User.last
User.count
User.last
User.find(env['current_user_id'])
User.last
decoded_token[0]['user_id']
User.find(env['current_user_id'])
c
auth_header.present?
c
env['current_user_id'] = decoded_token[0]['user_id']
decoded_token[0]['user_id']
decoded_token 
decoded_token = decode_token(token)
token = auth_header.split(' ').last
auth_header
c
User.count
User.find(user_id)
user_id
c
@current_user
